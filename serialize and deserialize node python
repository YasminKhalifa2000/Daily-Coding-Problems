# Given the root to a binary tree, implement serialize(root), which serializes the tree into a string, and deserialize(s), which deserializes the string back into the tree.


def serialize(N, n = ""):

    if not N:
        n += "/ "
        
    else:
        n += (str(N.val) + " ")
        n = serialize(N.left, n = n)
        n = serialize(N.right, n = n)
    
    return n
    
def deserialize(n):
    
    if n[i] == "/":
        return None
    else:
        for i in n:



class Node:
    def __init__(self, val, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right
        
node = Node('root', Node('left', Node('left.left')), Node('right'))

print(serialize(node))
